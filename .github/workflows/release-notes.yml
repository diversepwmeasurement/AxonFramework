env:
  CATEGORY: 6
  CA_FILE: /tmp/ca.pem
  URL: https://discuss.axoniq.io/posts.json
jobs:
  announce-on-discuss:
    needs: create-release-notes
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Get authorities certificates
      run: openssl s_client -showcerts -connect discuss.axoniq.io:443 </dev/null |
        sed -n -e '/-.BEGIN/,/-.END/ p' > $CA_FILE
    - continue-on-error: true
      id: cache-notes
      name: Retrieve Release Notes from cache
      uses: actions/cache@v4
      with:
        key: notes
        path: ${{ needs.create-release-notes.outputs.notes }}
    - continue-on-error: true
      id: read_release_notes
      name: Read release notes file
      uses: juliangruber/read-file-action@v1
      with:
        path: ${{ needs.create-release-notes.outputs.notes }}
    - continue-on-error: true
      name: Create Discuss topic
      run: "echo $json | curl --cacert $CA_FILE -X POST \"$URL\" \\\n-H \"Api-Key:\
        \ ${{ secrets.DISCUSS_KEY }}\" \\\n-H \"Api-Username: axonbot\" \\\n-H 'Content-Type:\
        \ application/json' \\\n--data-binary @- << EOF\n{\n  \"title\": \"Axon Framework\
        \ - Release ${{ needs.create-release-notes.outputs.version }}\",\n  \"raw\"\
        : \"\nI\u2019m glad to announce that we\u2019ve released Axon Framework version\
        \ ${{ needs.create-release-notes.outputs.version }} on ${{ needs.create-release-notes.outputs.date\
        \ }}.\nThis release contains: \n\n${{ steps.read_release_notes.outputs.content\
        \ }}\n\",\n  \"category\": $CATEGORY,\n  \"tags\": [\"release\"]\n}\nEOF\n"
  create-release-notes:
    outputs:
      date: ${{ steps.extract-version-and-notes.outputs.RELEASE_DATE }}
      notes: ${{ steps.extract-version-and-notes.outputs.RELEASE_NOTES_FILE }}
      version: ${{ steps.extract-version-and-notes.outputs.VERSION }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OUTPUT_FOLDER: temp_release_notes
        USE_MILESTONE_TITLE: 'true'
      name: Create Release Notes Markdown
      uses: docker://decathlon/release-notes-generator-action:3.1.5
    - continue-on-error: true
      id: extract-version-and-notes
      name: Set Release environment- and output-variables
      run: 'RELEASE_NOTES_FILE=$(ls temp_release_notes/*.md | head -n 1)

        echo "RELEASE_NOTES_FILE=$RELEASE_NOTES_FILE" >> $GITHUB_ENV

        echo "RELEASE_NOTES_FILE=$RELEASE_NOTES_FILE" >> $GITHUB_OUTPUT

        VERSION=$(echo ${{ github.event.milestone.title }} | cut -d'' '' -f2)

        echo "VERSION=$VERSION" >> $GITHUB_ENV

        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

        echo "RELEASE_DATE=$(date +''%b %d, %Y'')" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: cache-notes
      name: Add Release Notes to cache
      uses: actions/cache@v4
      with:
        key: notes
        path: ${{ env.RELEASE_NOTES_FILE }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: create_release
      name: Create a Draft Release Notes on GitHub
      uses: actions/create-release@v1
      with:
        body_path: ${{ env.RELEASE_NOTES_FILE }}
        draft: true
        release_name: Axon Framework v${{ env.VERSION }}
        tag_name: axon-${{ env.VERSION }}
name: Milestone Closure
on:
  repository_dispatch:
    types: trigger-ga___release-notes.yml
